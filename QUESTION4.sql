
SELECT REPLACE(ordh.ORDERREF, 'PO', '') AS ORDERREF,
	FORMAT(ordh.ORDERDATE, 'MMM-yyyy') AS ORDERPERIOD,
	sup.SUPPLIERNAME,
	REPLACE(FORMAT(ordh.ORDERTOTALAMOUNT, 'C'), '$', '') AS ORDERTOTALAMOUNT,
	ords.ORDERSTATUSDESCRIPTION,
	inv.INVOICEREFERENCE,
	REPLACE(FORMAT(ISNULL(inv.INVOICETOTALAMOUNT, 0), 'C'), '$', '') AS ORDERTOTALAMOUNT,
	CASE WHEN acn.STATUSNULL > 0
		THEN 'To verify'
	WHEN acn.PENDING > 0
		THEN 'To follow up'
	WHEN acn.PAID > 0
		THEN 'OK'
	END AS ACTION
--Order Header
FROM XXBCM_ORDER_HEADER ordh
--Supplier
INNER JOIN XXBCM_CLIENT sup ON sup.SUPPLIERID = ordh.SUPPLIERID
--Order Status
INNER JOIN XXBCM_ORDER_STATUS ords ON ords.ORDERSTATUSID =	ordh.ORDERSTATUSID
--Invoice Total
LEFT JOIN ( SELECT ORDERHEADERID,
				INVOICEREFERENCE,
				SUM(INVOICEAMOUNT) AS INVOICETOTALAMOUNT
			FROM XXBCM_INVOICE
			GROUP BY ORDERHEADERID, INVOICEREFERENCE ) AS inv ON inv.ORDERHEADERID = ordh.ORDERHEADERID
--Invoice Status
LEFT JOIN ( SELECT ORDERHEADERID,
	COUNT(CASE WHEN INVOICESTATUSDESCRIPTION IS NULL THEN (INVOICESTATUSDESCRIPTION) END) AS STATUSNULL,
	COUNT(CASE WHEN INVOICESTATUSDESCRIPTION = 'Pending' THEN (INVOICESTATUSDESCRIPTION) END) AS PENDING,
	COUNT(CASE WHEN INVOICESTATUSDESCRIPTION = 'Paid' THEN (INVOICESTATUSDESCRIPTION) END) AS PAID
FROM XXBCM_INVOICE inv
INNER JOIN XXBCM_INVOICE_STATUS invs ON invs.INVOICESTATUSID = inv.INVOICESTATUSID
GROUP BY ORDERHEADERID ) AS acn On acn.ORDERHEADERID = ordh.ORDERHEADERID
ORDER BY ordh.ORDERDATE DESC

